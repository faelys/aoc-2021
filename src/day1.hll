/*
 * Copyright (c) 2021, Natacha PortÃ©

 * Permission to use, copy, modify, and distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.

 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 */

Constants:
  int N := 10;

Declarations:
  int depth[N];
  int window[N-2];
  int answer1;
  int answer2;

Definitions:
  depth := {
    199,
    200,
    208,
    210,
    200,
    207,
    240,
    269,
    260,
    263
  };

  window[i] := depth[i] + depth[i+1] + depth[i+2];

  answer1 := SUM i:[1, N-1] (if depth[i] > depth[i-1] then 1 else 0);
  answer2 := SUM i:[1, N-3] (if window[i] > window[i-1] then 1 else 0);

Outputs:
  answer1;
  answer2;

Proof Obligations:
  answer1 = 7;
  answer2 = 5;
